{"version":3,"file":"static/js/644.920a074b.chunk.js","mappings":"qLAEaA,E,OAAYC,GAAAA,GAAH,+X,0BCGTC,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,gBAAKQ,IAAG,UATH,mCASG,OAAgBL,EAAMM,aAAeC,IAAI,GAAGC,MAAM,WAFrDR,EAAME,GADA,KAStB,C,+LChBDO,EAAAA,EAAAA,SAAAA,QAAA,gCACA,IAAMC,EAAM,mCAECC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,mCAAsCC,IADlC,cACrBE,EADqB,OAE3BC,QAAQC,IAAIF,EAASG,MAFM,kBAGpBH,EAASG,MAHW,2CAAH,qDAMbC,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACgBO,EADhB,+CADG,cACpBL,EADoB,yBAKnBA,EAASG,MALU,2CAAH,sDAQZG,EAAS,mCAAG,WAAMhB,GAAN,uFACAO,EAAAA,EAAAA,IAAA,gBAAmBP,EAAnB,oBAAiCQ,EAAjC,oBADA,cACjBE,EADiB,yBAGhBA,EAASG,MAHO,2CAAH,sDAMTI,EAAS,mCAAG,WAAMjB,GAAN,uFACAO,EAAAA,EAAAA,IAAA,gBACZP,EADY,4BACUQ,EADV,oBADA,cACjBE,EADiB,yBAIhBA,EAASG,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMnB,GAAN,uFACHO,EAAAA,EAAAA,IAAA,gBACZP,EADY,4BACUQ,EADV,2BADG,cACpBE,EADoB,yBAInBA,EAASG,KAAKO,SAJK,2CAAH,qD,2HC9BZC,EAAQ7B,EAAAA,GAAAA,KAAH,4KASL8B,EAAQ9B,EAAAA,GAAAA,MAAH,6IAQL+B,EAAY/B,EAAAA,GAAAA,OAAH,qW,SCjBTgC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAS1B,OACE,0BACE,UAACJ,EAAD,CAAOK,aAAa,MAAMD,SATT,SAAAE,GACnBA,EAAEC,iBACF,IAAQb,EAAUY,EAAEE,OAAOC,SAAnBf,MACRU,EAASV,EAAMgB,OACfJ,EAAEE,OAAOG,OACV,EAIG,WACE,4BACE,SAACV,EAAD,CACEW,KAAK,OACLC,KAAK,aAGT,SAACX,EAAD,CAAWU,KAAK,SAAhB,wBAIP,E,kBCtBYE,EAAY3C,EAAAA,GAAAA,KAAH,uECiCtB,EA5BgB,WAAO,IAAD,EACpB,GAA4B4C,EAAAA,EAAAA,UAAS,IAArC,eAAO1C,EAAP,KAAe2C,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMzB,EAAK,UAAGwB,EAAaE,IAAI,gBAApB,QAAgC,GAa3C,IAPAC,EAAAA,EAAAA,YAAU,WACM,KAAV3B,IAGJD,EAAAA,EAAAA,IAAaC,GAAO4B,MAAK,SAAAC,GAAC,OAAIP,EAAUO,EAAExB,QAAhB,GAC3B,GAAE,CAACL,IAECrB,EAIL,OACE,UAACyC,EAAD,YACE,SAACX,EAAD,CAAWC,SAjBI,SAAAoB,GACjBL,EAA+B,KAAfK,EAAoB,CAAE9B,MAAO8B,GAAe,CAAC,EAC9D,IAgBI9B,IAAS,SAACtB,EAAA,EAAD,CAAUC,OAAQA,MAGjC,C","sources":["components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","components/services/api-movie.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  list-style: none;\n  margin: 0 auto;\n  padding: 0;\n  justify-content: center;\n  img {\n    border-radius: 5px;\n  }\n  li {\n    transition: box-shadow 250ms linear, transform 250ms linear;\n  }\n\n  li:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n    transform: scale(1.02);\n  }\n`;\n","import { MovieList } from './FilmList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FilmList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img src={`${BASE_URL}${movie.poster_path}`} alt=\"\" width=\"200\" />\n          </Link>\n        </li>\n      ))}\n    </MovieList>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = 'd9a5502e7ecfc2f8fab8d65f4cbb6057';\n\nexport const popularMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${KEY}`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const movieByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const movieById = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const movieCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const movieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Forma = styled.form`\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 30px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  border: 1px solid black;\n\n  width: auto;\n  font: inherit;\n`;\nexport const SearchBtn = styled.button`\n  margin-left: 10px;\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 4px;\n  width: 80px;\n  height: auto;\n  background-color: transparent;\n  color: black;\n  cursor: pointer;\n  font: inherit;\n  font-weight: 500;\n  :hover {\n    color: white;\n    background-color: orangered;\n    border-color: orangered;\n  }\n`;\n","import { Forma, Input, SearchBtn } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { query } = e.target.elements;\n    onSubmit(query.value);\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <Forma autoComplete=\"off\" onSubmit={handleSubmit}>\n        <label>\n          <Input\n            type=\"text\"\n            name=\"query\"\n          />\n        </label>\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Forma>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieMain = styled.main`\n  padding-top: 20px;\n  padding-bottom: 40px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from '../../components/SearchBox/SearchBox';\nimport { movieByQuery } from '../../components/services/api-movie';\nimport { FilmList } from 'components/FilmList/FilmList';\nimport { MovieMain } from './Movies.styled';\n\n const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n \n  const formSubmit = inputQuery => {\n    setSearchParams(inputQuery !== '' ? { query: inputQuery } : {});\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    movieByQuery(query).then(r => setMovies(r.results));\n  }, [query]);\n  \n  if (!movies) {\n    return;\n  }\n\n  return (\n    <MovieMain>\n      <SearchBox onSubmit={formSubmit} />\n      {query && <FilmList movies={movies} />}\n    </MovieMain>\n  );\n};\n\nexport default Movies;"],"names":["MovieList","styled","FilmList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","width","axios","KEY","popularMovies","response","console","log","data","movieByQuery","query","movieById","movieCast","cast","movieReviews","results","Forma","Input","SearchBtn","SearchBox","onSubmit","autoComplete","e","preventDefault","target","elements","value","reset","type","name","MovieMain","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","then","r","inputQuery"],"sourceRoot":""}