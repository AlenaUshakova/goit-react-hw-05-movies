{"version":3,"file":"static/js/373.3b3fb583.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAA,gCACA,IAAMC,EAAM,mCAECC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,mCAAsCC,IADlC,cACrBE,EADqB,OAE3BC,QAAQC,IAAIF,EAASG,MAFM,kBAGpBH,EAASG,MAHW,2CAAH,qDAMbC,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACgBO,EADhB,+CADG,cACpBL,EADoB,yBAKnBA,EAASG,MALU,2CAAH,sDAQZG,EAAS,mCAAG,WAAMC,GAAN,uFACAV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,EAAjC,oBADA,cACjBE,EADiB,yBAGhBA,EAASG,MAHO,2CAAH,sDAMTK,EAAS,mCAAG,WAAMD,GAAN,uFACAV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACUT,EADV,oBADA,cACjBE,EADiB,yBAIhBA,EAASG,KAAKM,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHV,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACUT,EADV,2BADG,cACpBE,EADoB,yBAInBA,EAASG,KAAKQ,SAJK,2CAAH,qD,0JC7BZC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yQ,SCAVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECPYE,EAAeN,EAAAA,GAAAA,IAAH,4LAcZO,EAAYP,EAAAA,GAAAA,GAAH,0GAOTQ,GAAYR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,kVAmBTU,EAAYV,EAAAA,GAAAA,IAAH,0JAOTW,EAAiBX,EAAAA,GAAAA,GAAH,qECgC3B,EAnEqB,WAAO,IAAD,IACjBN,GAAOkB,EAAAA,EAAAA,MAAPlB,GAER,GAA8BmB,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAM7C,IAJAC,EAAAA,EAAAA,YAAU,YACR3B,EAAAA,EAAAA,IAAUC,GAAI2B,KAAKN,EACpB,GAAE,CAACrB,KAECoB,EACH,OAAO,KAGT,IACEQ,EAQER,EARFQ,YACAC,EAOET,EAPFS,eACAC,EAMEV,EANFU,cACAC,EAKEX,EALFW,aACAC,EAIEZ,EAJFY,eACAC,EAGEb,EAHFa,aACAC,EAEEd,EAFFc,OACAC,EACEf,EADFe,SAGF,OACE,4BACE,SAAC3B,EAAD,CAAUC,GAAIa,EAAd,sBACA,UAACV,EAAD,YACE,gBAAKwB,IAAG,UAhCC,mCAgCD,OAAgBR,GAAeS,IAAI,GAAGC,MAAM,SACpD,4BACE,0BACGT,GAAkBC,EADrB,MAEE,0BAAOS,SAASR,GAAgBC,KAFlC,QAIA,kDAAmBQ,KAAKC,MAAqB,GAAfR,GAA9B,SACA,sCACA,uBAAIE,KACJ,oCACA,uBACGD,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OACV,kBAAkBC,MAAO,CAAEC,YAAa,QAAxC,UACGH,EAAMI,KADT,OAAWH,EADD,aAQlB,UAAC5B,EAAD,YACE,SAACC,EAAD,sCACA,UAACJ,EAAD,YACE,2BACE,SAACC,EAAD,CAAWL,GAAG,OAAd,kBAAsC,QAExC,yBACE,SAACK,EAAD,CAAWL,GAAG,UAAd,8BAIN,SAAC,EAAAuC,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/services/api-movie.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = 'd9a5502e7ecfc2f8fab8d65f4cbb6057';\n\nexport const popularMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${KEY}`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const movieByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const movieById = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const movieCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const movieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 15px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const WrapperMovie = styled.div`\n  display: flex;\n  gap: 20px;\n  font-weight: 500;\n  h1,\n  h3 {\n    color: orangered;\n  }\n  img {\n    border: 1px solid black;\n    border-radius:2px;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 40px;\n  margin: 0;\n  padding: 0;\n`;\nexport const MovieLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid grey;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n    border: none;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orangered;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  height: auto;\n  margin-top: 30px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid black;\n  border-top: 1px solid black;\n`;\nexport const MovieInfoTitle = styled.h4`\n  margin-bottom: 30px;\n  color: orangered;\n`;\n","import { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { movieById } from '../../components/services/api-movie';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport {\n  WrapperMovie,\n  MovieList,\n  MovieLink,\n  MovieInfo,\n  MovieInfoTitle,\n} from './MovieDetails.styled';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n\n  const [movieId, setMovieId] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    movieById(id).then(setMovieId);\n  }, [id]);\n\n  if (!movieId) {\n    return null;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    original_name,\n    release_date,\n    first_air_date,\n    vote_average,\n    genres,\n    overview,\n  } = movieId;\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <WrapperMovie>\n        <img src={`${BASE_URL}${poster_path}`} alt=\"\" width=\"300\" />\n        <div>\n          <h1>\n            {original_title || original_name} (\n            <span>{parseInt(release_date || first_air_date)}</span>)\n          </h1>\n          <p>User Score: {`${Math.round(vote_average * 10)}%`}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres.map((genre, index) => (\n              <span key={index} style={{ marginRight: '10px' }}>\n                {genre.name} /\n              </span>\n            ))}\n          </p>\n        </div>\n      </WrapperMovie>\n      <MovieInfo>\n        <MovieInfoTitle>Additional Information</MovieInfoTitle>\n        <MovieList>\n          <li>\n            <MovieLink to=\"cast\">Cast</MovieLink>{' '}\n          </li>\n          <li>\n            <MovieLink to=\"reviews\">Reviews</MovieLink>\n          </li>\n        </MovieList>\n      </MovieInfo>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","popularMovies","response","console","log","data","movieByQuery","query","movieById","id","movieCast","cast","movieReviews","results","StyledLink","styled","Link","BackLink","to","children","size","WrapperMovie","MovieList","MovieLink","NavLink","MovieInfo","MovieInfoTitle","useParams","useState","movieId","setMovieId","backLinkHref","useLocation","state","from","useEffect","then","poster_path","original_title","original_name","release_date","first_air_date","vote_average","genres","overview","src","alt","width","parseInt","Math","round","map","genre","index","style","marginRight","name","Suspense","fallback"],"sourceRoot":""}